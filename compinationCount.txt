Given three equal-length arrays, array1, array2, and array3, your task is to find the number of combinations of indices i, j, and k, such that array1[i] < array2[j] < array3[k].

Example

For array1 = [12, 6, 8, 3], array2 = [1, 3, 5, 8], and array3 = [9, 15, 7, 5], the output should be combinationCount(array1, array2, array3) = 7.

The possible combinations are:
{3, 5, 7}
{3, 5, 9}
{3, 5, 15}
{3, 8, 9}
{3, 8, 15}
{6, 8, 9}
{6, 8, 15}

For array1 = [25 25], array2 = [30 30], and array3 = [35 37], the output should be combinationCount(array1,array2,array3) = 8.

The possible combinations are:
{25, 30, 35}
{25, 30, 37}
{25, 30, 35}
{25, 30, 37}
{25, 30, 35}
{25, 30, 37}
{25, 30, 35}
{25, 30, 37}

[execution time limit] 3 seconds (java)

[input] array.integer array1

The first array of numbers.

Guaranteed constraints:
1 = array1.length = 104
0 = array1[i] = 2 · 104